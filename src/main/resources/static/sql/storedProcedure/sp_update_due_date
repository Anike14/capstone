USE db4spring

DROP PROCEDURE IF EXISTS sp_update_due_date;  
GO  
CREATE procedure sp_update_due_date
AS
BEGIN
--Logic
    declare @today date;
	set @today = GETDATE();
	
	SELECT A.PID, A.STATUS,
	A.Progress / ISNULL(NULLIF(DATEDIFF(day, A.StartedDate, @today), 0), 1) AS averageProgress
	INTO #ProjectIdTobeUpdated
	FROM Projects AS A WHERE A.STATUS IN (0, 1)
	
	UPDATE Projects 
	SET ExpectedDueDate = DATEADD(day, (100 - Progress) / averageProgress, StartedDate)
	FROM Projects AS A INNER JOIN #ProjectIdTobeUpdated AS B
	ON A.PID = B.PID AND B.STATUS = 1;

	UPDATE Projects 
	SET ExpectedDueDate = DATEADD(day, 
		ISNULL(NULLIF(DATEDIFF(day, A.LastUpdateDate, @today), 0), 0), ExpectedDueDate)
	FROM Projects AS A INNER JOIN #ProjectIdTobeUpdated AS B
	ON A.PID = B.PID AND B.STATUS = 0;
	
	UPDATE Projects
	SET LastUpdateDate = GETDATE();
	
	SELECT A.TID, A.STATUS,
	A.Progress / ISNULL(NULLIF(DATEDIFF(day, A.StartedDate, @today), 0), 1) AS averageProgress
	INTO #TaskIdTobeUpdated
	FROM Tasks AS A WHERE A.STATUS IN (0, 1)
	
	UPDATE Tasks 
	SET ExpectedDueDate = DATEADD(day, (100 - Progress) / averageProgress, StartedDate)
	FROM Tasks AS A INNER JOIN #TaskIdTobeUpdated AS B
	ON A.TID = B.TID AND B.STATUS = 1;

	UPDATE Tasks 
	SET ExpectedDueDate = DATEADD(day, 
		ISNULL(NULLIF(DATEDIFF(day, A.LastUpdateDate, @today), 0), 0), ExpectedDueDate)
	FROM Tasks AS A INNER JOIN #TaskIdTobeUpdated AS B
	ON A.TID = B.TID AND B.STATUS = 0;

	UPDATE Tasks
	SET LastUpdateDate = GETDATE();
	
END